 <script>
        // Gallery variables
        let currentGalleryImages = [];
        let currentIndex = 0;

        // Gallery functions
        function openGallery(title, images) {
            currentGalleryImages = images;
            currentIndex = 0;
            
            document.getElementById('galleryTitle').textContent = title;
            const galleryContainer = document.getElementById('galleryImages');
            const indicatorsContainer = document.getElementById('galleryIndicators');
            
            // Clear previous content
            galleryContainer.innerHTML = '';
            indicatorsContainer.innerHTML = '';
            
            // Add images
            images.forEach((img, index) => {
                const imgElement = document.createElement('img');
                imgElement.src = img;
                imgElement.alt = title + ' - Photo ' + (index + 1);
                imgElement.className = 'w-full h-auto flex-none transition-transform duration-300';
                imgElement.style.transform = `translateX(-${currentIndex * 100}%)`;
                galleryContainer.appendChild(imgElement);
                
                // Add indicator
                const indicator = document.createElement('button');
                indicator.className = `w-3 h-3 rounded-full ${index === 0 ? 'bg-indigo-600' : 'bg-gray-300'}`;
                indicator.onclick = () => goToImage(index);
                indicatorsContainer.appendChild(indicator);
            });
            
            document.getElementById('galleryModal').classList.remove('hidden');
            updateGalleryControls();
        }

        function closeGallery() {
            document.getElementById('galleryModal').classList.add('hidden');
        }

        function nextImage() {
            if (currentIndex < currentGalleryImages.length - 1) {
                currentIndex++;
                updateGallery();
            }
        }

        function prevImage() {
            if (currentIndex > 0) {
                currentIndex--;
                updateGallery();
            }
        }

        function goToImage(index) {
            currentIndex = index;
            updateGallery();
        }

        function updateGallery() {
            const galleryContainer = document.getElementById('galleryImages');
            const images = galleryContainer.querySelectorAll('img');
            const indicators = document.getElementById('galleryIndicators').children;
            
            images.forEach((img, index) => {
                img.style.transform = `translateX(-${currentIndex * 100}%)`;
            });
            
            for (let i = 0; i < indicators.length; i++) {
                indicators[i].className = i === currentIndex ? 'w-3 h-3 rounded-full bg-indigo-600' : 'w-3 h-3 rounded-full bg-gray-300';
            }
            
            updateGalleryControls();
        }

        function updateGalleryControls() {
            document.getElementById('prevBtn').style.visibility = currentIndex === 0 ? 'hidden' : 'visible';
            document.getElementById('nextBtn').style.visibility = currentIndex === currentGalleryImages.length - 1 ? 'hidden' : 'visible';
        }

        // Handle keyboard navigation
        document.addEventListener('keydown', function(e) {
            if (!document.getElementById('galleryModal').classList.contains('hidden')) {
                if (e.key === 'ArrowRight') {
                    nextImage();
                } else if (e.key === 'ArrowLeft') {
                    prevImage();
                } else if (e.key === 'Escape') {
                    closeGallery();
                }
            }
        });

        // Mock database of occupied properties
const occupiedProperties = {
            // Format: "Property Name": "occupied"
            // Example: "Villa Méditerranée": "occupied"
        };

        feather.replace();

        function checkAvailability(propertyName, buttonElement) {
            if (occupiedProperties[propertyName]) {
                // Property is occupied
                const card = buttonElement.closest('.property-card');
                const availableTag = card.querySelector('.available-tag');
                availableTag.textContent = 'Occupé';
                availableTag.classList.remove('bg-indigo-600');
                availableTag.classList.add('bg-red-600');
                buttonElement.disabled = true;
                buttonElement.classList.remove('bg-indigo-600', 'hover:bg-indigo-700');
                buttonElement.classList.add('bg-gray-400', 'cursor-not-allowed');
                alert('Désolé, cette résidence est déjà occupée pour les dates sélectionnées.');
            } else {
                openModal(propertyName);
            }
        }

        function openModal(propertyName) {
document.getElementById('propertyName').textContent = propertyName;
            document.getElementById('bookingModal').classList.remove('hidden');
        }

        function closeModal() {
            document.getElementById('bookingModal').classList.add('hidden');
        }

        function closeSuccessModal() {
            document.getElementById('successModal').classList.add('hidden');
        }
        function submitBooking() {
            const propertyName = document.getElementById('propertyName').textContent;
            const form = document.getElementById('bookingForm');
            
            // Here you should validate the form data and send to backend
            // For demo purposes, we'll mark the property as occupied
            occupiedProperties[propertyName] = "occupied";
            
            // Find and update all instances of this property
            document.querySelectorAll('.property-card').forEach(card => {
                const title = card.querySelector('h3').textContent;
                if (title === propertyName) {
                    const availableTag = card.querySelector('.available-tag');
                    const bookBtn = card.querySelector('.book-btn');
                    
                    availableTag.textContent = 'Occupé';
                    availableTag.classList.remove('bg-indigo-600');
                    availableTag.classList.add('bg-red-600');
                    
                    bookBtn.disabled = true;
                    bookBtn.classList.remove('bg-indigo-600', 'hover:bg-indigo-700');
                    bookBtn.classList.add('bg-gray-400', 'cursor-not-allowed');
                }
            });

            document.getElementById('bookingModal').classList.add('hidden');
            form.reset();
            document.getElementById('successModal').classList.remove('hidden');
        }
        // Check availability on date changes
        document.getElementById('checkIn').addEventListener('change', function() {
            // In a real app, you would check with your backend
            // to verify property availability for selected dates
        });

        document.getElementById('checkOut').addEventListener('change', function() {
            // Same as above
        });

        // Close modals when clicking outside
        window.onclick = function(event) {
            if (event.target === document.getElementById('galleryModal')) {
                closeGallery();
            }
if (event.target === document.getElementById('bookingModal')) {
                closeModal();
            }
            if (event.target === document.getElementById('successModal')) {
                closeSuccessModal();
            }
        }
    </script>
</body>
</html>
































<script>
        // Mock database of occupied properties
        const occupiedProperties = {
            // Format: "Property Name": "occupied"
            // Example: "Villa Méditerranée": "occupied"
        };

        feather.replace();

        function checkAvailability(propertyName, buttonElement) {
            if (occupiedProperties[propertyName]) {
                // Property is occupied
                const card = buttonElement.closest('.property-card');
                const availableTag = card.querySelector('.available-tag');
                availableTag.textContent = 'Occupé';
                availableTag.classList.remove('bg-indigo-600');
                availableTag.classList.add('bg-red-600');
                buttonElement.disabled = true;
                buttonElement.classList.remove('bg-indigo-600', 'hover:bg-indigo-700');
                buttonElement.classList.add('bg-gray-400', 'cursor-not-allowed');
                alert('Désolé, cette résidence est déjà occupée pour les dates sélectionnées.');
            } else {
                openModal(propertyName);
            }
        }

        function openModal(propertyName) {
document.getElementById('propertyName').textContent = propertyName;
            document.getElementById('bookingModal').classList.remove('hidden');
        }

        function closeModal() {
            document.getElementById('bookingModal').classList.add('hidden');
        }

        function closeSuccessModal() {
            document.getElementById('successModal').classList.add('hidden');
        }
        function submitBooking() {
            const propertyName = document.getElementById('propertyName').textContent;
            const form = document.getElementById('bookingForm');
            
            // Here you should validate the form data and send to backend
            // For demo purposes, we'll mark the property as occupied
            occupiedProperties[propertyName] = "occupied";
            
            // Find and update all instances of this property
            document.querySelectorAll('.property-card').forEach(card => {
                const title = card.querySelector('h3').textContent;
                if (title === propertyName) {
                    const availableTag = card.querySelector('.available-tag');
                    const bookBtn = card.querySelector('.book-btn');
                    
                    availableTag.textContent = 'Occupé';
                    availableTag.classList.remove('bg-indigo-600');
                    availableTag.classList.add('bg-red-600');
                    
                    bookBtn.disabled = true;
                    bookBtn.classList.remove('bg-indigo-600', 'hover:bg-indigo-700');
                    bookBtn.classList.add('bg-gray-400', 'cursor-not-allowed');
                }
            });

            document.getElementById('bookingModal').classList.add('hidden');
            form.reset();
            document.getElementById('successModal').classList.remove('hidden');
        }
        // Check availability on date changes
        document.getElementById('checkIn').addEventListener('change', function() {
            // In a real app, you would check with your backend
            // to verify property availability for selected dates
        });

        document.getElementById('checkOut').addEventListener('change', function() {
            // Same as above
        });

        // Close modals when clicking outside
window.onclick = function(event) {
            if (event.target === document.getElementById('bookingModal')) {
                closeModal();
            }
            if (event.target === document.getElementById('successModal')) {
                closeSuccessModal();
            }
        }
    </script>
</body>
</html>